- name: catalogue component
  hosts: catalogue
  become: yes

  tasks: 
   - name: rpm setup
     ansible.builtin.shell: "curl -sL https://rpm.nodesource.com/setup_lts.x | bash"

   - name: install nodejs
     ansible.builtin.yum:
      name: nodejs
      state: installed

   - name: check user roboshop exist or not
     ansible.builtin.command: id roboshop
     register: srikar
     ignore_errors: true

   - name: create user roboshop
     ansible.builtin.user:
      name: roboshop
     when: srikar.rc != 0 

   - name: check directory app exist or not
     ansible.builtin.stat:
      path: /app
     register: srikar

   - name: print the directory 
     ansible.builtin.debug:
      msg: "output is: {{srikar}}"

   - name: create the directory
     ansible.builtin.file:
      path: /app
      state: directory 
     when: srikar.stat.exists == False

   - name: download catalogue artifact
     ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

   - name: unzip catalogue
     ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

   - name: install dependencies
     ansible.builtin.command: npm install 
     args:
      chdir: /app 

   - name: copy the catalog.service
     ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

   - name: daemon-reload
     ansible.builtin.systemd:
      daemon_reload: true

   - name: copy mongo.repo
     ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

   - name: install mongodb-org-shell
     ansible.builtin.yum:
      name: mongodb-org-shell
      state: installed

   - name: load catalogue data
     ansible.builtin.shell: mongo --host mongodb.join-devops.online < /app/schema/catalogue.js

   - name: start catalogue
     ansible.builtin.service:
      name: catalogue
      start: started
      enabled: true
      


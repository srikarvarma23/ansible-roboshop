- name: install shipping component
  hosts: shipping
  become: yes

  tasks: 
  - name: install maven
    ansible.builtin.yum:
     name: maven
     state: installed

  - name: check user roboshop exist or not
    ansible.builtin.command: id roboshop
    register: srikar
    ignore_errors: true
  
  - name: create user
    ansible.builtin.user: 
     name: roboshop
    when: srikar.rc != 0

  - name: check app dir exist or not
    ansible.builtin.stat:
     path: /app
    register: srikar

  - name: create app directory
    ansible.builtin.file:
     path: /app
     state: directory 
    when: srikar.stat.exists == false
  
  - name: download an unarchive zip
    ansible.builtin.unarchive:
     src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
     dest: /app
     remote_src: yes 

  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args: 
     chdir: /app
    
  - name: move the shipping.jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
     chdir: /app

  - name: copy shipping.service
    ansible.builtin.copy:
     src: shipping.service
     dest: /etc/systemd/system/shipping.service

  - name: daemon reload
    ansible.builtin.systemd:
     daemon_reload: true

  - name: enable and start shipping
    ansible.builtin.service:
     name: shipping
     state: started
     enabled: yes

  - name: install mysql client
    ansible.builtin.yum:
     name: mysql
     state: installed

  - name: load schema
    ansible.builtin.shell: mysql -h mysql.join-devops.online -uroot -pRoboShop@1 < /app/schema/shipping.sql 

  - name: restart shipping
    ansible.builtin.service:
     name: shipping
     state: restarted
